fastlane_require "etc"

fastlane_version "2.68.2"

default_platform :ios

desc "Runs swiftlint tool."
lane :lint do |options|
	output_file = "swiftlint.html"
	mode = :lint # :lint or :autocorrect
	swiftlint(
		mode: mode,
		reporter: "html",
		output_file: output_file,
		ignore_exit_status: true,
	)
	sh "open ../#{output_file}"
end

desc "Runs swiftformat tool."
lane :format do |options|
	sh("swiftformat ../menuol/**/*.swift ../tests/**/*.swift")
end

desc "Runs unit tests."
lane :test do
	run_tests(
		scheme: "menuol",
		code_coverage: true,
		thread_sanitizer: true,
		open_report: true,
		devices: ["iPhone 15 Pro"],
		clean: false
	)
end

desc "Creates app icons."
lane :app_icons do
	output_dir = "./menuol/Resources/Assets.xcassets"
	FileUtils.rm_f(Dir.glob("../#{output_dir}/AppIcon.appiconset/*.*")) # delete previous icon files
	home_dir = Etc.getpwuid.dir
	appicon(
		appicon_image_file: "#{home_dir}/Dropbox (Personal)/apps/menuol/AppIcon.png",
		appicon_path: output_dir,
		appicon_devices: [:ipad, :iphone, :ios_marketing]
	)
end

desc "Searches for unused code."
lane :unused do
	periphery(config: ".periphery.yml")
	results = lane_context[SharedValues::PERIPHERY_RESULTS] || []
  if results.empty?
    UI.success "âœ… No unused code found."
  else
    results.each do |r|
      UI.message("#{r.location}: #{r.kind} \"#{r.name}\" #{r.hints}")
    end
    UI.error("ðŸš¨ Found #{results.count} unused declarations.")
  end
end

desc "Lists longest source files."
lane :longs do
	sh("find ../menuol \\( -name '*.swift' -o -name '*.m' -o -name '*.h' \\) -type f -print0 | xargs -0 wc -l | sort -rn | head -n 20")
end

desc "Updates Fastlane and plugins."
lane :updatef do
	sh("bundle update fastlane")
	sh("bundle exec fastlane update_plugins")
end
